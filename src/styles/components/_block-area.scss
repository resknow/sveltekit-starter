/**
 * Block Area
 *
 * Used mainly for full page layouts, implemented using CSS Grid
 *
 * By default, content will be placed in the center column, but can be
 * adjusted using provided modifier classes:
 *
 * .is-wide Causes content to span an extra column each side of the main content
 * .is-full Causes content to span the full with of the page
 *
 * Block areas can be nested if you need to keep consistency between sections
 */

.block-area {
	--gutter: var(--space-8, 2rem);
	--columns: var(--gutter) calc(var(--gutter) / 2) 1fr calc(var(--gutter) / 2)
		var(--gutter);

	display: grid;
	grid-template-columns: var(--columns);
}

/* Place content in the center */
.block-area > * {
	grid-column: 2 / span 3;
}

.block-area > * + * {
	margin-block-start: var(--row-gap, var(--space-16));
}

/* Set some sensible spacing defaults for text content */
.block-area > h1 + p,
.block-area > h2 + p,
.block-area > h3 + p,
.block-area > h4 + p,
.block-area > h5 + p,
.block-area > h6 + p {
	--row-gap: var(--space-3);
}

.block-area > p + p,
.block-area > p + ul,
.block-area > ul + p,
.block-area > ul + ul,
.block-area > p + ol,
.block-area > ol + p,
.block-area > ol + ol {
	--row-gap: var(--space-4);
}

.block-area > .alignwide,
.block-area > .alignfull {
	grid-column: 1 / -1;
}

@media (min-width: 460px) {
	.block-area > .alignwide {
		grid-column: 2 / span 3;
	}
}

@media (min-width: 768px) {
	.block-area {
		--content-width: 640px;
		--columns: var(--gutter) 1fr var(--content-width) 1fr var(--gutter);
	}

	.block-area > * {
		grid-column: 3;
	}
}

@media (min-width: 1024px) {
	.block-area {
		--content-width: 720px;
		--columns: var(--gutter) 1fr 1fr var(--content-width) 1fr 1fr
			var(--gutter);
	}

	.block-area > * {
		grid-column: 4;
	}

	.block-area > .alignwide {
		grid-column: 3 / span 3;
	}
}
